Header: hostName: vagrant, Time Zone: Coordinated Universal Time, processName: null, processId: null
2016-02-22 17:42:11,129 INFO  org.apache.kafka.clients.consumer.ConsumerConfig [pool-1-thread-2]: ConsumerConfig values: 
	fs.mapr.hardmount = true
	streams.record.strip.streampath = false
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = []
	ssl.keystore.type = JKS
	enable.auto.commit = false
	fs.mapr.rpc.timeout = 300
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 5000
	receive.buffer.bytes = 32768
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	streams.consumer.default.stream = /cars
	fetch.min.bytes = 1024
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = TA
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 30000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	ssl.protocol = TLS
	streams.consumer.buffer.memory = 67108864
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = earliest

2016-02-22 17:42:11,130 INFO  org.apache.kafka.clients.consumer.ConsumerConfig [pool-1-thread-7]: ConsumerConfig values: 
	fs.mapr.hardmount = true
	streams.record.strip.streampath = false
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = []
	ssl.keystore.type = JKS
	enable.auto.commit = false
	fs.mapr.rpc.timeout = 300
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 5000
	receive.buffer.bytes = 32768
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	streams.consumer.default.stream = /cars
	fetch.min.bytes = 1024
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = TA
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 30000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	ssl.protocol = TLS
	streams.consumer.buffer.memory = 67108864
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = earliest

2016-02-22 17:42:11,130 INFO  org.apache.kafka.clients.consumer.ConsumerConfig [pool-1-thread-1]: ConsumerConfig values: 
	fs.mapr.hardmount = true
	streams.record.strip.streampath = false
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = []
	ssl.keystore.type = JKS
	enable.auto.commit = false
	fs.mapr.rpc.timeout = 300
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 5000
	receive.buffer.bytes = 32768
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	streams.consumer.default.stream = /cars
	fetch.min.bytes = 1024
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = TA
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 30000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	ssl.protocol = TLS
	streams.consumer.buffer.memory = 67108864
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = earliest

2016-02-22 17:42:11,130 INFO  org.apache.kafka.clients.consumer.ConsumerConfig [pool-1-thread-9]: ConsumerConfig values: 
	fs.mapr.hardmount = true
	streams.record.strip.streampath = false
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = []
	ssl.keystore.type = JKS
	enable.auto.commit = false
	fs.mapr.rpc.timeout = 300
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 5000
	receive.buffer.bytes = 32768
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	streams.consumer.default.stream = /cars
	fetch.min.bytes = 1024
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = TA
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 30000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	ssl.protocol = TLS
	streams.consumer.buffer.memory = 67108864
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = earliest

2016-02-22 17:42:11,130 INFO  org.apache.kafka.clients.consumer.ConsumerConfig [pool-1-thread-8]: ConsumerConfig values: 
	fs.mapr.hardmount = true
	streams.record.strip.streampath = false
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = []
	ssl.keystore.type = JKS
	enable.auto.commit = false
	fs.mapr.rpc.timeout = 300
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 5000
	receive.buffer.bytes = 32768
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	streams.consumer.default.stream = /cars
	fetch.min.bytes = 1024
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = TA
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 30000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	ssl.protocol = TLS
	streams.consumer.buffer.memory = 67108864
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = earliest

2016-02-22 17:42:11,130 INFO  org.apache.kafka.clients.consumer.ConsumerConfig [pool-1-thread-5]: ConsumerConfig values: 
	fs.mapr.hardmount = true
	streams.record.strip.streampath = false
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = []
	ssl.keystore.type = JKS
	enable.auto.commit = false
	fs.mapr.rpc.timeout = 300
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 5000
	receive.buffer.bytes = 32768
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	streams.consumer.default.stream = /cars
	fetch.min.bytes = 1024
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = TA
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 30000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	ssl.protocol = TLS
	streams.consumer.buffer.memory = 67108864
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = earliest

2016-02-22 17:42:11,130 INFO  org.apache.kafka.clients.consumer.ConsumerConfig [main]: ConsumerConfig values: 
	fs.mapr.hardmount = true
	streams.record.strip.streampath = false
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = []
	ssl.keystore.type = JKS
	enable.auto.commit = false
	fs.mapr.rpc.timeout = 300
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 5000
	receive.buffer.bytes = 32768
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	streams.consumer.default.stream = /cars
	fetch.min.bytes = 1024
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = TA
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 30000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	ssl.protocol = TLS
	streams.consumer.buffer.memory = 67108864
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = earliest

2016-02-22 17:42:11,130 INFO  org.apache.kafka.clients.consumer.ConsumerConfig [pool-1-thread-3]: ConsumerConfig values: 
	fs.mapr.hardmount = true
	streams.record.strip.streampath = false
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = []
	ssl.keystore.type = JKS
	enable.auto.commit = false
	fs.mapr.rpc.timeout = 300
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 5000
	receive.buffer.bytes = 32768
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	streams.consumer.default.stream = /cars
	fetch.min.bytes = 1024
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = TA
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 30000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	ssl.protocol = TLS
	streams.consumer.buffer.memory = 67108864
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = earliest

2016-02-22 17:42:11,130 INFO  org.apache.kafka.clients.consumer.ConsumerConfig [pool-1-thread-4]: ConsumerConfig values: 
	fs.mapr.hardmount = true
	streams.record.strip.streampath = false
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = []
	ssl.keystore.type = JKS
	enable.auto.commit = false
	fs.mapr.rpc.timeout = 300
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 5000
	receive.buffer.bytes = 32768
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	streams.consumer.default.stream = /cars
	fetch.min.bytes = 1024
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = TA
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 30000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	ssl.protocol = TLS
	streams.consumer.buffer.memory = 67108864
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = earliest

2016-02-22 17:42:11,130 INFO  org.apache.kafka.clients.consumer.ConsumerConfig [pool-1-thread-6]: ConsumerConfig values: 
	fs.mapr.hardmount = true
	streams.record.strip.streampath = false
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = []
	ssl.keystore.type = JKS
	enable.auto.commit = false
	fs.mapr.rpc.timeout = 300
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 5000
	receive.buffer.bytes = 32768
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	streams.consumer.default.stream = /cars
	fetch.min.bytes = 1024
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = TA
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 30000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	ssl.protocol = TLS
	streams.consumer.buffer.memory = 67108864
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = earliest

Header: hostName: vagrant, Time Zone: Coordinated Universal Time, processName: null, processId: null
Header: hostName: vagrant, Time Zone: Coordinated Universal Time, processName: null, processId: null
2016-03-07 11:00:59,913 INFO  org.apache.kafka.clients.consumer.ConsumerConfig [main]: ConsumerConfig values: 
	fs.mapr.hardmount = true
	streams.record.strip.streampath = false
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = []
	ssl.keystore.type = JKS
	enable.auto.commit = false
	fs.mapr.rpc.timeout = 300
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 5000
	receive.buffer.bytes = 32768
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	streams.consumer.default.stream = /cars
	fetch.min.bytes = 1024
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = TA
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 30000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	ssl.protocol = TLS
	streams.consumer.buffer.memory = 67108864
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = earliest

Header: hostName: vagrant, Time Zone: Coordinated Universal Time, processName: null, processId: null
Header: hostName: vagrant, Time Zone: Coordinated Universal Time, processName: null, processId: null
2016-03-07 11:01:00,050 INFO  org.apache.kafka.clients.consumer.ConsumerConfig [pool-1-thread-4]: ConsumerConfig values: 
	fs.mapr.hardmount = true
	streams.record.strip.streampath = false
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = []
	ssl.keystore.type = JKS
	enable.auto.commit = false
	fs.mapr.rpc.timeout = 300
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 5000
	receive.buffer.bytes = 32768
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	streams.consumer.default.stream = /cars
	fetch.min.bytes = 1024
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = TA
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 30000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	ssl.protocol = TLS
	streams.consumer.buffer.memory = 67108864
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = earliest

2016-03-07 11:01:00,055 INFO  org.apache.kafka.clients.consumer.ConsumerConfig [pool-1-thread-2]: ConsumerConfig values: 
	fs.mapr.hardmount = true
	streams.record.strip.streampath = false
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = []
	ssl.keystore.type = JKS
	enable.auto.commit = false
	fs.mapr.rpc.timeout = 300
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 5000
	receive.buffer.bytes = 32768
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	streams.consumer.default.stream = /cars
	fetch.min.bytes = 1024
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = TA
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 30000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	ssl.protocol = TLS
	streams.consumer.buffer.memory = 67108864
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = earliest

2016-03-07 11:01:00,055 INFO  org.apache.kafka.clients.consumer.ConsumerConfig [pool-1-thread-1]: ConsumerConfig values: 
	fs.mapr.hardmount = true
	streams.record.strip.streampath = false
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = []
	ssl.keystore.type = JKS
	enable.auto.commit = false
	fs.mapr.rpc.timeout = 300
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 5000
	receive.buffer.bytes = 32768
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	streams.consumer.default.stream = /cars
	fetch.min.bytes = 1024
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = TA
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 30000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	ssl.protocol = TLS
	streams.consumer.buffer.memory = 67108864
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = earliest

2016-03-07 11:01:00,054 INFO  org.apache.kafka.clients.consumer.ConsumerConfig [pool-1-thread-9]: ConsumerConfig values: 
	fs.mapr.hardmount = true
	streams.record.strip.streampath = false
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = []
	ssl.keystore.type = JKS
	enable.auto.commit = false
	fs.mapr.rpc.timeout = 300
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 5000
	receive.buffer.bytes = 32768
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	streams.consumer.default.stream = /cars
	fetch.min.bytes = 1024
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = TA
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 30000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	ssl.protocol = TLS
	streams.consumer.buffer.memory = 67108864
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = earliest

2016-03-07 11:01:00,053 INFO  org.apache.kafka.clients.consumer.ConsumerConfig [pool-1-thread-8]: ConsumerConfig values: 
	fs.mapr.hardmount = true
	streams.record.strip.streampath = false
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = []
	ssl.keystore.type = JKS
	enable.auto.commit = false
	fs.mapr.rpc.timeout = 300
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 5000
	receive.buffer.bytes = 32768
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	streams.consumer.default.stream = /cars
	fetch.min.bytes = 1024
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = TA
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 30000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	ssl.protocol = TLS
	streams.consumer.buffer.memory = 67108864
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = earliest

2016-03-07 11:01:00,053 INFO  org.apache.kafka.clients.consumer.ConsumerConfig [main]: ConsumerConfig values: 
	fs.mapr.hardmount = true
	streams.record.strip.streampath = false
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = []
	ssl.keystore.type = JKS
	enable.auto.commit = false
	fs.mapr.rpc.timeout = 300
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 5000
	receive.buffer.bytes = 32768
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	streams.consumer.default.stream = /cars
	fetch.min.bytes = 1024
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = TA
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 30000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	ssl.protocol = TLS
	streams.consumer.buffer.memory = 67108864
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = earliest

2016-03-07 11:01:00,053 INFO  org.apache.kafka.clients.consumer.ConsumerConfig [pool-1-thread-3]: ConsumerConfig values: 
	fs.mapr.hardmount = true
	streams.record.strip.streampath = false
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = []
	ssl.keystore.type = JKS
	enable.auto.commit = false
	fs.mapr.rpc.timeout = 300
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 5000
	receive.buffer.bytes = 32768
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	streams.consumer.default.stream = /cars
	fetch.min.bytes = 1024
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = TA
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 30000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	ssl.protocol = TLS
	streams.consumer.buffer.memory = 67108864
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = earliest

2016-03-07 11:01:00,053 INFO  org.apache.kafka.clients.consumer.ConsumerConfig [pool-1-thread-7]: ConsumerConfig values: 
	fs.mapr.hardmount = true
	streams.record.strip.streampath = false
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = []
	ssl.keystore.type = JKS
	enable.auto.commit = false
	fs.mapr.rpc.timeout = 300
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 5000
	receive.buffer.bytes = 32768
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	streams.consumer.default.stream = /cars
	fetch.min.bytes = 1024
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = TA
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 30000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	ssl.protocol = TLS
	streams.consumer.buffer.memory = 67108864
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = earliest

2016-03-07 11:01:00,053 INFO  org.apache.kafka.clients.consumer.ConsumerConfig [pool-1-thread-6]: ConsumerConfig values: 
	fs.mapr.hardmount = true
	streams.record.strip.streampath = false
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = []
	ssl.keystore.type = JKS
	enable.auto.commit = false
	fs.mapr.rpc.timeout = 300
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 5000
	receive.buffer.bytes = 32768
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	streams.consumer.default.stream = /cars
	fetch.min.bytes = 1024
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = TA
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 30000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	ssl.protocol = TLS
	streams.consumer.buffer.memory = 67108864
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = earliest

2016-03-07 11:01:00,053 INFO  org.apache.kafka.clients.consumer.ConsumerConfig [pool-1-thread-5]: ConsumerConfig values: 
	fs.mapr.hardmount = true
	streams.record.strip.streampath = false
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = []
	ssl.keystore.type = JKS
	enable.auto.commit = false
	fs.mapr.rpc.timeout = 300
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 5000
	receive.buffer.bytes = 32768
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	streams.consumer.default.stream = /cars
	fetch.min.bytes = 1024
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = TA
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 30000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	ssl.protocol = TLS
	streams.consumer.buffer.memory = 67108864
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = earliest

Header: hostName: vagrant, Time Zone: Coordinated Universal Time, processName: null, processId: null
Header: hostName: vagrant, Time Zone: Coordinated Universal Time, processName: null, processId: null
2016-03-07 11:01:00,226 INFO  org.apache.kafka.clients.producer.ProducerConfig [main]: ProducerConfig values: 
	fs.mapr.hardmount = true
	metric.reporters = []
	metadata.max.age.ms = 300000
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	bootstrap.servers = []
	ssl.keystore.type = JKS
	streams.buffer.max.time.ms = 3000
	fs.mapr.rpc.timeout = 300
	max.block.ms = 60000
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	request.timeout.ms = 30000
	acks = 1
	receive.buffer.bytes = 32768
	ssl.truststore.type = JKS
	retries = 0
	ssl.truststore.location = null
	ssl.keystore.password = null
	send.buffer.bytes = 131072
	compression.type = none
	metadata.fetch.timeout.ms = 60000
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	buffer.memory = 33554432
	timeout.ms = 30000
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	block.on.buffer.full = false
	streams.producer.default.stream = 
	streams.partitioner.class = class org.apache.kafka.clients.producer.DefaultStreamsPartitioner
	ssl.key.password = null
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	max.in.flight.requests.per.connection = 5
	metrics.num.samples = 2
	ssl.protocol = TLS
	streams.parallel.flushers.per.partition = true
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	batch.size = 16384
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	max.request.size = 1048576
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	linger.ms = 0

Header: hostName: vagrant, Time Zone: Coordinated Universal Time, processName: null, processId: null
2016-03-07 11:01:00,727 INFO  org.apache.kafka.clients.consumer.ConsumerConfig [main]: ConsumerConfig values: 
	fs.mapr.hardmount = true
	streams.record.strip.streampath = false
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = []
	ssl.keystore.type = JKS
	enable.auto.commit = false
	fs.mapr.rpc.timeout = 300
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 5000
	receive.buffer.bytes = 32768
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	streams.consumer.default.stream = /cars
	fetch.min.bytes = 1024
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = TA
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 30000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	ssl.protocol = TLS
	streams.consumer.buffer.memory = 67108864
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = earliest

